{"version":3,"sources":["actions/index.js","constants.js","components/PasswordShowHide.jsx","components/Login.jsx","components/Registration.jsx","components/Todo.jsx","components/App.jsx","reducers/index.js","index.js"],"names":["recieveTodos","todos","type","deleteTodo","id","PasswordShowHide","props","state","hidden","toggleShow","bind","this","setState","placeholder","className","value","password","onChange","onClick","Component","Login","mail","handleEmail","handlePassword","event","target","getToken","disabled","login","connect","dispatch","console","log","JSON","stringify","fetch","method","body","email","then","res","json","data","localStorage","setItem","access_token","window","location","href","Registration","user","handleUser","createToken","signUp","name","status","Todo","text","handleChange","makeTodo","removeTodo","todo","switchStatus","completed","removeAll","map","key","defaultChecked","changeStatus","for","deleteAll","length","getTodos","onKeyPress","charCode","addTodo","undefined","renderTodos","token","getItem","headers","objects","catch","reason","Promise","all","App","exact","path","to","action","filter","store","createStore","reducer","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7f6fefe.chunk.js","sourcesContent":["import { ADD_TODO, DELETE_TODO, RECIEVE_TODOS, CHANGE_STATUS, DELETE_ALL, LOGIN, SIGNUP } from '../constants';\n\n\nexport const addTodo = (todo) => {\n    const action = {\n        type: ADD_TODO,\n        todo\n    }\n    return action;\n} \n\n\nexport const getTodos = () => dispatch => {\n    const token = localStorage.getItem(\"token\")\n    return fetch(\n        'http://51.15.86.4:8006/API/v1/todo/',\n        {headers: {'Authorization': token} }\n    )\n        .then((res)=> {\n            console.log('response', res)\n            if(res.status === 403) {\n\n                window.location.href = '/login'\n            } \n            return res.json()\n        })\n        .then(res => dispatch(recieveTodos(res.objects)))\n        .catch((reason) =>console.log('rrrrrrrrr', reason))\n}\n\nexport const recieveTodos = (todos) => {\n    const action = {\n        type: RECIEVE_TODOS,\n        todos\n\n    }\n    return action;\n}\n\nexport const makeTodo = (text) => dispatch => {\n    const token = localStorage.getItem(\"token\")\n    return fetch(\n        'http://51.15.86.4:8006/API/v1/todos/',\n        {\n            method: 'POST',\n            headers: {'Authorization': token},\n            body: JSON.stringify({text: text})\n        }\n    )\n        .then(res => res.json())\n        .then(res => dispatch(addTodo(res)))\n}\n\nexport const changeStatus = (todo) => {\n    const action = {\n        type: CHANGE_STATUS,\n        todo\n    }\n    return action;\n}\n\nexport const switchStatus = (id, text, status) => dispatch => {\n    const token = localStorage.getItem(\"token\")\n    const request = fetch(\n        `http://51.15.86.4:8006/API/v1/todos/${id}/`,\n        {\n            method: 'PUT',\n            headers: {'Authorization': token},\n            body: JSON.stringify({text: text, completed: status})\n        }\n    )\n        .then(res => res.json())\n        .then(res => dispatch(changeStatus(res)))\n\n}\n\nexport const deleteTodo = (id) => {\n    const action = {\n        type: DELETE_TODO,\n        id\n    }\n    return action;\n}\n\nexport const removeTodo = (id) => dispatch => {\n    const token = localStorage.getItem(\"token\")\n    return fetch (\n        `http://51.15.86.4:8006/API/v1/todos/${id}/`,\n        {\n            method: 'DELETE',\n            headers: {'Authorization': token},\n        }\n    )\n        .then(res => dispatch(deleteTodo(id)))\n}\n\nexport const deleteAll = () => {\n    const action = {\n        type: DELETE_ALL,\n\n    }\n    return action;\n}\n\nexport const removeAll = (todos) => dispatch => {\n    const token = localStorage.getItem(\"token\")\n    Promise.all(todos.map(todo =>\n        fetch (\n            `http://51.15.86.4:8006/API/v1/todos/${todo.id}/`,\n            {\n                method: 'DELETE',\n                headers: {'Authorization': token},\n            }\n    \n        ) \n    ))\n        .then(res => dispatch(deleteAll()))\n}\n\nexport const login = (data) => {\n    console.log('data', data)\n    localStorage.setItem(\"token\", 'Bearer ' + data.access_token);\n    window.location.href = '/'\n    const action = {\n        type: LOGIN,\n    }\n    return action;\n}\n\nexport const getToken = (mail, password) => dispatch => {\n    console.log('getting token', JSON.stringify({mail: mail, password: password}))\n    return fetch (\n        'http://51.15.86.4:8006/API/v1/token',\n        {\n            method: 'POST',\n            body: JSON.stringify({email: mail, password: password})\n        }\n    )\n    .then(res => res.json())\n    .then(res => dispatch(login(res)))\n}\n\nexport const signUp = (data) => {\n    console.log('data reg', data)\n    window.location.href = '/login'\n    const action = {\n        type: SIGNUP,\n    }\n    return action;\n}\n\nexport const createToken = (user, mail, password) => dispatch => {\n    return fetch (\n        'http://51.15.86.4:8006/API/v1/users/',\n        {\n            method: 'POST',\n            body: JSON.stringify({name: user, email: mail, password: password})\n        }\n    )\n    .then((res)=> {\n        console.log('response', res)\n        if(res.status === 422) {\n\n            window.location.href = '/signup'\n        } \n        return res.json()\n    })\n\n    .then(res => dispatch(signUp(res)))\n} \n","export const ADD_TODO = 'ADD_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const RECIEVE_TODOS = 'RECIEVE_TODOS';\nexport const CHANGE_STATUS = 'CHANGE_STATUS';\nexport const DELETE_ALL = 'DELETE_ALL';\nexport const LOGIN = 'LOGIN';\nexport const SIGNUP = 'SIGNUP'\n\n","import React, { Component } from 'react';\n\n\nexport class PasswordShowHide extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hidden: true,\n        } \n        this.toggleShow = this.toggleShow.bind(this); \n    }\n\n    toggleShow() {\n        this.setState({ hidden: !this.state.hidden });\n    }\n    \n\n    render() {\n        return(\n            <div>\n                <input\n                    placeholder ={this.props.placeholder}\n                    className={this.props.className}\n                    type={this.state.hidden ? \"password\" : \"text\"}\n                    value={this.props.password}\n                    onChange={this.props.onChange}\n                    />\n                    <div className='password-input'>\n                        <input className='password'type='checkbox' onClick={this.toggleShow}/>\n                        <p>Show password</p>\n                    </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {getToken} from '../actions';\nimport { connect } from 'react-redux';\nimport {PasswordShowHide} from './PasswordShowHide'\n\nclass Login extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            mail: '',\n            password: '',\n        }\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handlePassword = this.handlePassword.bind(this);\n\n    }\n\n    handleEmail(event) {\n        this.setState({mail: event.target.value})\n    }\n\n    handlePassword(event) {\n        this.setState({password: event.target.value})\n    }\n\n    \n    login() {\n        this.props.getToken(this.state.mail, this.state.password)\n    }\n\n    render() {\n        return(\n            <div className='login'>\n                <div className='login-form-group'>\n                    <input\n                        placeholder ='Email'\n                        className='login-form-control'\n                        onChange = {this.handleEmail}\n                    />\n                    <PasswordShowHide\n                        placeholder ='Password'\n                        className='login-form-control'\n                        password={this.state.password}\n                        onChange = {this.handlePassword}\n                    />\n                    <button\n                        type=\"button\"\n                        className=\"add-button\"\n                        disabled={(this.state.mail && this.state.password !== 0) ? false : true}\n                        onClick={() => this.login()}\n                    >Log In</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        todos: state\n    }\n}\n\nexport default connect(mapStateToProps, { getToken }) (Login);","import React, { Component } from 'react';\nimport {createToken} from '../actions';\nimport { connect } from 'react-redux';\nimport {PasswordShowHide} from './PasswordShowHide'\n\nclass Registration extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: '',\n            mail: '',\n            password: ''\n        }\n\n        this.handleUser = this.handleUser.bind(this);\n        this.handleEmail = this.handleEmail.bind(this);\n        this.handlePassword = this.handlePassword.bind(this);\n        \n    }\n\n    handleUser(event) {\n        this.setState({user: event.target.value})\n    }\n\n    handleEmail(event) {\n        this.setState({mail: event.target.value})\n    }\n\n    handlePassword(event) {\n        this.setState({password: event.target.value})\n    }\n\n    signUp() {\n        this.props.createToken(this.state.user, this.state.mail, this.state.password)\n    }\n\n\n\n\n    render() {\n        return (\n            <div className='login'>\n                <div className='login-form-group'>\n                    <input\n                        placeholder ='Username'\n                        className='login-form-control'\n                        onChange = {this.handleUser}\n                    />\n                    <input\n                        placeholder ='Email'\n                        className='login-form-control'\n                        onChange = {this.handleEmail}\n                    />\n                    {/*<input\n                        placeholder ='Password'\n                        className='login-form-control'\n                        onChange = {this.handlePassword}\n                    />*/}\n                    <PasswordShowHide\n                        placeholder ='Password'\n                        className='login-form-control'\n                        password={this.state.password}\n                        onChange = {this.handlePassword}\n                    />\n                    <button\n                        type=\"button\"\n                        className=\"add-button\"\n                        disabled={(this.state.mail && this.state.password && this.state.user !== 0) ? false : true}\n                        onClick={() => this.signUp()}\n                    >Sign Up</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        todos: state\n    }\n}\n\nexport default connect(mapStateToProps, { createToken }) (Registration);\n\n","import React, { Component } from 'react';\nimport { makeTodo, deleteTodo, getTodos, switchStatus, removeTodo, removeAll } from '../actions';\nimport { connect } from 'react-redux';\n\n\nclass Todo extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: '',\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n\n\n\n\n    handleChange(event) {\n        this.setState({text: event.target.value})\n        console.log(this.state.text)\n    }\n\n    addTodo() {\n        this.props.makeTodo(this.state.text);\n        this.setState({text: ''})\n    }\n\n    deleteTodo(id) {\n        this.props.removeTodo(id)\n    }\n\n    changeStatus(todo) {\n        this.props.switchStatus(todo.id, todo.text, !todo.completed)\n    }\n\n    deleteAll(todos) {\n        this.props.removeAll(todos)\n\n    }\n\n\n    renderTodos() {\n        const {todos} = this.props;\n \n        return (\n            /*<div className='grid-container'>\n                {todos.map(todo => {\n                    return (\n                        <div key={todo.id} className=\"todo-item\">\n                            <input className=\"checkbox\" type='checkbox' checked></input>\n                            <span className='todo-text'> {todo.text} </span>\n                            <span \n                                type='button' \n                                className='delete-todo' \n                                onClick = {() => this.deleteTodo(todo.id)}>x</span>\n                        </div> \n                    )\n                })\n                }\n            </div>*/\n            <div>\n                <div className=\"grid-container\">\n                    {todos.map(todo => {\n                        return (\n                            <div key={todo.id} className=\"todo-item\">\n                                <input \n                                    type=\"checkbox\" \n                                    id={todo.id} \n                                    className=\"hidden-box\" \n                                    defaultChecked = {todo.completed} \n                                    onClick = {() => this.changeStatus(todo)}\n                                />\n                                <label for={todo.id} className=\"check--label\">\n                                    <span className=\"check--label-box\"></span>\n                                    <span className=\"todo-text-wrapper\">\n                                        <span className=\"todo-text\">{todo.text}</span>\n                                    </span>\n                                    <span \n                                    type='button' \n                                    className='delete-todo' \n                                    onClick = {() => this.deleteTodo(todo.id)}>x</span>\n                                </label>\n                            </div>\n                        )\n                    })\n                    }\n\n                </div>\n                <button\n                type = 'button'\n                className = \"delete-button\"\n                onClick = {() => this.deleteAll(todos)}\n                hidden = {todos.length === 0 ? true : false}\n                >Delete all</button> \n            </div>\n        )\n        \n    }\n\n    componentDidMount() {\n        this.props.getTodos()\n        \n    }\n    \n\n    render () {\n        \n        return (\n                <div className = 'App'>\n                    <div>\n                        <div className='form-group'>\n                            <input \n                                className ='form-control'\n                                placeholder ='What needs to be done?'\n                                onChange = {this.handleChange}\n                                value = {this.state.text}\n                                onKeyPress = {target => (target.charCode === 13 ? this.addTodo() : undefined)}\n\n                            /> \n                            <button\n                                type=\"button\"\n                                className=\"add-button\"\n                                onClick = {() => this.addTodo()}\n                            >\n                                Add\n                            </button>\n                        </div>\n                        \n                    </div>\n                    {this.renderTodos()}\n                </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        todos: state\n    }\n}\n\nexport default connect(mapStateToProps, {makeTodo, deleteTodo, getTodos, switchStatus, removeTodo, removeAll}) (Todo);","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport Login from './Login';\nimport Registration from './Registration';\nimport Todo from './Todo';\n\nexport class App extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return(\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <div className='navbar'>\n                            <span className='title-nav'><Link to='/'>ToDo</Link></span>\n                            <ul className=\"nav\">\n                                <li className='menu'><Link to='/logout'>Logout</Link></li>\n                            </ul>\n                        </div>\n                        \n                        <Todo />\n                    </Route>\n                    <Route path='/login'>\n                        <div className='navbar'>\n                            <span className='title-nav'><Link to='/'>ToDo</Link></span>\n                            <ul className=\"nav\">\n                                <li className='menu'><Link to='/signup'>SignUp</Link></li>\n                                <li className='menu'><Link to='/login'>Login</Link></li>\n                            </ul>\n                        </div>\n                        <Login />\n                    </Route>\n                    <Route path='/signup'>\n                        <div className='navbar'>\n                            <span className='title-nav'><Link to='/'>ToDo</Link></span>\n                            <ul className=\"nav\">\n                                <li className='menu active'><Link to='/signup'>SignUp</Link></li>\n                                <li className='menu'><Link to='/login'>Login</Link></li>\n                            </ul>\n                        </div>\n                        <Registration/>\n                    </Route>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\n","import { ADD_TODO, DELETE_TODO, RECIEVE_TODOS, CHANGE_STATUS, DELETE_ALL, LOGIN } from '../constants';\nimport { bake_cookie, read_cookie} from 'sfcookies'\n\n/*const todo = (action) => {\n    let { text } = action;\n    return {\n        id: Math.random(),\n        text\n    }\n}*/\n\nconst todos = (state = [], action) => {\n    let todos = null;\n    //state = read_cookie('todos')\n    switch(action.type) {\n        case ADD_TODO:\n            todos = [...state, action.todo]\n            //bake_cookie('todos', todos)\n            return todos;\n\n        case DELETE_TODO:\n            todos = [...state.filter(todo => todo.id !== action.id)]\n            //bake_cookie('todos', todos)\n            return todos;\n        case RECIEVE_TODOS:\n            todos = [...action.todos]\n            return todos;\n        case CHANGE_STATUS:\n            todos = state.map(todo => {\n                if (todo.id === action.todo.id) {\n                    return action.todo;\n                } else {\n                    return todo;\n                }\n            })\n            return todos;\n        case DELETE_ALL:\n            todos = []\n            return todos;\n        default:\n            return state;\n\n    }\n}\n\nexport default todos;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers'\nimport './index.css';\nimport { applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducer, compose(applyMiddleware(thunk)));\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App/>\n    </Provider>, document.getElementById('root')\n)"],"sourceRoot":""}